import React, { useState } from "react";
import { Link, useNavigate } from 'react-router-dom';

const Register_Page = () => {
  const navigate = useNavigate();

  const [form, setForm] = useState({
    fullname: "",
    email: "",
    password: "",
    confirmPassword: "",
    position: ""
  });

  const [showPassword, setShowPassword] = useState(false);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const isFormValid = () => {
    return (
      form.fullname.trim() !== "" &&
      form.email.trim() !== "" &&
      form.password.trim() !== "" &&
      form.confirmPassword.trim() !== "" &&
      form.position.trim() !== "" &&
      form.password === form.confirmPassword
    );
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!isFormValid()) return;

    console.log("р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕кр╕бр╕▒р╕Др╕г:", form);
    // р╕Хр╕гр╕Зр╕Щр╕╡р╣Йр╕кр╕▓р╕бр╕▓р╕гр╕Ц call API р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Др╕Фр╣Й
    alert("р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕кр╕│р╣Ар╕гр╣Зр╕И!");

    // р╣Др╕Ыр╕лр╕Щр╣Йр╕▓ login
    navigate("/");
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-purple-200">
      <div className="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
        <h2 className="text-center text-xl font-semibold text-gray-800 mb-6">
          р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ьр╕╣р╣Йр╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щ
        </h2>

        <form onSubmit={handleSubmit} className="space-y-4">
          {/* р╕Кр╕╖р╣Ир╕н-р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е */}
          <div>
            <input
              type="text"
              name="fullname"
              placeholder="р╕Кр╕╖р╣Ир╕н-р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е"
              value={form.fullname}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded-md p-3 text-gray-700 focus:ring-2 focus:ring-orange-400 focus:outline-none"
              required
            />
          </div>

          {/* Email */}
          <div>
            <input
              type="email"
              name="email"
              placeholder="р╕нр╕╡р╣Ар╕бр╕е"
              value={form.email}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded-md p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-orange-400"
              required
            />
          </div>

          {/* Password */}
          <div className="relative">
            <input
              type={showPassword ? "text" : "password"}
              name="password"
              placeholder="р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ"
              value={form.password}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded-md p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-orange-400"
              required
            />
            <button
              type="button"
              onClick={() => setShowPassword(!showPassword)}
              className="absolute inset-y-0 right-3 flex items-center text-gray-400 hover:text-gray-600"
            >
              {showPassword ? "ЁЯСБя╕ПтАНЁЯЧия╕П" : "ЁЯЩИ"}
            </button>
          </div>

          {/* Confirm Password */}
          <div className="relative">
            <input
              type={showPassword ? "text" : "password"}
              name="confirmPassword"
              placeholder="р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ"
              value={form.confirmPassword}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded-md p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-orange-400"
              required
            />
          </div>

          {/* р╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕З */}
          <div>
            <label className="block text-gray-700 mb-1">р╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕Зр╕Чр╕╡р╣Ир╕кр╕бр╕▒р╕Др╕г</label>
            <select
              name="position"
              value={form.position}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded-md p-3 text-gray-700 focus:ring-2 focus:ring-orange-400 focus:outline-none"
              required
            >
              <option value="">-- р╣Ар╕ер╕╖р╕нр╕Бр╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕З --</option>
              <option value="р╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ър╕гр╕┤р╕Бр╕▓р╕г">р╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ър╕гр╕┤р╕Бр╕▓р╕г</option>
              <option value="р╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕ер╣Йр╕▓р╕Зр╕гр╕Ц">р╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕ер╣Йр╕▓р╕Зр╕гр╕Ц</option>
            </select>
          </div>

          {/* Submit Button */}
          <button
            type="submit"
            disabled={!isFormValid()}
            className={`w-full py-2.5 rounded-md text-white font-semibold transition ${
              isFormValid()
                ? "bg-purple-500 hover:bg-purple-600"
                : "bg-gray-400 cursor-not-allowed"
            }`}
          >
            р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
          </button>

          <div className="text-center mt-6 text-gray-600 text-sm">
            р╕бр╕╡р╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕нр╕вр╕╣р╣Ир╣Бр╕ер╣Йр╕з?{" "}
            <Link
              to="/login"
              className="text-purple-500 hover:text-purple-600 font-medium transition"
            >
              р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ
            </Link>
          </div>
        </form>
      </div>
    </div>
  );
};

export default Register_Page;
